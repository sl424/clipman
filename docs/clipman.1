.TH clipman 1 1.6.0 ""
.SH "NAME"
clipman
.SH "SYNOPSIS"
.TP
\fBclipman [<flags>] <command> [<args> ...]\fR

.SH "DESCRIPTION"
A clipboard manager for Wayland
.SH "OPTIONS"
.TP
\fB-h, --help\fR
Show context-sensitive help (also try --help-long and --help-man).
.TP
\fB--histpath="~/.local/share/clipman.json"\fR
Path of history file
.TP
\fB--primary\fR
Serve item to the primary clipboard. Default: --no-primary
.TP
\fB--notify\fR
Send desktop notifications on errors
.TP
\fB-v, --version\fR
Show application version.
.SH "COMMANDS"
.SS
\fBhelp [<command>...]\fR
.PP
Show help.
.SS
\fBstore [<flags>]\fR
.PP
Record clipboard events (run as argument to `wl-paste --watch`)
.TP
\fB--max-items=15\fR
history size
.TP
\fB-P, --no-persist\fR
Don't persist a copy buffer after a program exits
.TP
\fB--unix\fR
Normalize line endings to LF
.SS
\fBpick --tool=TOOL [<flags>]\fR
.PP
Pick an item from clipboard history
.TP
\fB--max-items=15\fR
scrollview length
.TP
\fB-t, --tool=TOOL\fR
Which selector to use: wofi/bemenu/CUSTOM/dmenu/rofi/STDOUT
.TP
\fB-T, --tool-args=""\fR
Extra arguments to pass to the --tool
.TP
\fB--print0\fR
Separate items using NULL; recommended if your tool supports --read0 or similar
.SS
\fBclear [<flags>]\fR
.PP
Remove item/s from history
.TP
\fB--max-items=15\fR
scrollview length
.TP
\fB-t, --tool=TOOL\fR
Which selector to use: wofi/bemenu/CUSTOM/dmenu/rofi/STDOUT
.TP
\fB-T, --tool-args=""\fR
Extra arguments to pass to the --tool
.TP
\fB-a, --all\fR
Remove all items
.TP
\fB--print0\fR
Separate items using NULL; recommended if your tool supports --read0 or similar
.SS
\fBrestore\fR
.PP
Serve the last recorded item from history
\fBshow-history\fR
.PP
Show all items from history
.SH "USAGE"
Run the binary in your Sway session by adding `exec wl-paste -t text --watch clipman store` (or `exec wl-paste -t text --watch clipman store 1>> PATH/TO/LOGFILE 2>&1 &` to log errors) at the beginning of your config.
.PP
For primary clipboard support, also add `exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json` (note that both the `-p` in wl-paste and the `-P` in clipman are mandatory in this case).
.PP
To query the history and select items, run the binary as `clipman pick -t wofi`. You can assign it to a keybinding: `bindsym $mod+h exec clipman pick -t wofi`.
You can pass additional arguments to the selector like this: `clipman pick --tool wofi -T'--prompt=my-prompt -i'` (both `--prompt` and `-i` are flags of wofi).
You can use a custom selector like this: `clipman pick --print0 --tool=CUSTOM --tool-args="fzf --prompt 'pick > ' --bind 'tab:up' --cycle --read0"`.
.PP
To remove items from history, `clipman clear -t wofi` and `clipman clear --all`.
.PP
To serve the last history item at startup, add `exec clipman restore` to your Sway config.
.SH "KNOWN ISSUES"
\fBAll items stored in history are treated as plain text.\fR
.PP
By default, we continue serving the last copied item even after its owner has exited. This means that, unless you run with the `--no-persist` option, you'll always immediately lose rich content: for example, if you copy formatted text inside Libre Office you'll lose all formatting on paste; or, if you copy a bookmark in Firefox, you won't be able to paste it in another bookmark folder.
.PP
\fBVim's Visual Block mode and other things (copying images in Firefox, etc) break if persistence is enabled\fR
.PP
Run `clipman store` with the `--no-persist` option if you are affected. Unfortunately, it seems that there is no way to make them play well together.
